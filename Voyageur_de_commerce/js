
1) Cadrer l‚Äôexposition (DNS)

But : lister qui, quand, combien.
KQL (adapte les noms d‚Äôindex/champs selon ta pipeline ECS) :

event.category:network and dns.question.name: "*javascriptbasics*"

Champs utiles √† afficher/agr√©ger : @timestamp, host.name, source.ip, dns.question.name, dns.type, dns.response_code.

üëâ √âtends la recherche aux TLD √† risque et aux redirections vues dans les m√™mes minutes :

event.category:network and dns.question.name: /.*(update|browser|chrome|edge|firefox|cdn|script).*\.((top|xyz|monster|site|live|shop|click|cam|work|gdn|fun))/ 

2) Retrouver le parcours web (HTTP/Proxy/Netflow)

But : confirmer un t√©l√©chargement .js et voir les redirs.

(event.category:network and url.domain: "javascriptbasics.com")
or (event.category:web and url.full: "*javascriptbasics.com*")

Ajoute : http.response.status_code, url.full, http.request.referrer, user_agent.original, destination.ip.
Filtre sur les .js et sur des referers douteux :

event.category:(web or network) and file.extension: "js"

3) Sur l‚Äôendpoint : ex√©cutions anormales (tr√®s discriminant)

But : rep√©rer le second stage typique (wscript/mshta/PowerShell) lanc√© depuis un navigateur.

event.category:process and event.type:start and 
process.parent.name: ("chrome.exe","msedge.exe","firefox.exe","iexplore.exe") and
process.name: ("wscript.exe","cscript.exe","mshta.exe","powershell.exe","cmd.exe","rundll32.exe")

Affiche process.command_line. Indices forts :
	‚Ä¢	mshta.exe http* / javascript:
	‚Ä¢	wscript.exe *.js ou cscript.exe *.js
	‚Ä¢	powershell.exe avec -EncodedCommand, FromBase64String, iwr, Start-BitsTransfer, -ExecutionPolicy Bypass.

Ces patterns sont classiques dans les cha√Ænes fake update / SocGholish.  Ôøº

4) Fichiers t√©l√©charg√©s & persistance

But : voir o√π le JS a √©t√© √©crit et s‚Äôil y a installation.

event.category:file and event.type:(creation or modification) and 
file.extension: ("js","vbs","ps1","dll","exe","zip","rar") and
process.parent.name: ("chrome.exe","msedge.exe","firefox.exe")

Persistance (logs Windows) :

event.category:process and event.code:(4698 or 4702)  // t√¢ches planifi√©es cr√©√©es/modifi√©es
or winlog.channel: "Microsoft-Windows-TaskScheduler/Operational"

Regarde aussi registry.* (Run/RunOnce) et service (event.code:7045).

5) R√©seaux ‚Äúpost-infection‚Äù

But : connexions chiffr√©es vers C2 depuis wscript/mshta/powershell/rundll32.

event.category:network and process.name: ("wscript.exe","mshta.exe","powershell.exe","rundll32.exe") and destination.port: 443

Croise avec destination.domain inconnu/nouveau dans ton environnement.

6) Chasse r√©trospective (30‚Äì90 jours)
	‚Ä¢	M√™me set de requ√™tes, mais √©largi aux domaines contenant ‚Äúupdate/patch/browser/chrome/firefox/edge‚Äù + TLD ‚Äúcheap/√©ph√©m√®res‚Äù.
	‚Ä¢	Ajoute un bucket ‚Äúfirst seen‚Äù/‚Äúrare domain‚Äù si tu as de la logique d‚ÄôUEBA.

‚∏ª

Tri rapide (15 minutes)
	1.	DNS : combien d‚Äôh√¥tes ‚Üí isole la/les machine(s) qui ont cliqu√© (HTTP vers .js).
	2.	HTTP : un .js a-t-il √©t√© servi ? Statut 200/302/307, taille > 50‚Äì100 Ko ?
	3.	Endpoint : navigateur ‚Üí wscript/mshta/powershell ? Si oui = incident.
	4.	Fichiers : pr√©sence de .js/.ps1 fra√Æchement cr√©√©s dans Downloads, %TEMP%, %AppData%.
	5.	Persistance : t√¢ches planifi√©es/RunKeys/services r√©cents.

‚∏ª

Contention & rem√©diation (si indicateurs positifs)
	‚Ä¢	Isole l‚Äôh√¥te via EDR, bloque domaine/IP (et domaines de redirection) sur DNS/Proxy/Firewall.
	‚Ä¢	Supprime t√¢ches planifi√©es, services et fichiers d√©pos√©s ; r√©initialise associations .js (d√©sactiver WSH si possible).
	‚Ä¢	Reset navigateurs (extensions, cache), vidange Startup & Run.
	‚Ä¢	Change credentials si l‚Äôh√¥te a touch√© des backends sensibles (infostealers fr√©quents : BitRAT/Lumma, etc.).  Ôøº
	‚Ä¢	Conserve artefacts pour forensique (Sysmon EID 1/3, Security 4688/4698, Prefetch/Amcache/SHIMCache).

‚∏ª

Alerting durable (ELK)

Cr√©e une r√®gle KQL ‚ÄúBrowser ‚Üí Script Interpreter‚Äù :

event.category:process and event.type:start and
process.parent.name: ("chrome.exe","msedge.exe","firefox.exe") and
process.name: ("wscript.exe","cscript.exe","mshta.exe","powershell.exe","cmd.exe","rundll32.exe")

Ajoute des conditions sur process.command_line (base64, -enc, FromBase64String, iwr, Start-BitsTransfer, javascript:) et exclue tes scripts internes sign√©s si besoin.

R√®gle Download .js depuis navigateur :

event.category:file and file.extension:"js" and
process.parent.name: ("chrome.exe","msedge.exe","firefox.exe")

R√®gle Fake update (r√©seau) :

event.category:(web or network) and 
(url.path:("*update*") or url.query:("*update*")) and
url.extension:("js","zip","rar","dll","exe")


‚∏ª

Pourquoi je pense √† SocGholish & co. ?
	‚Ä¢	Th√®me ‚Äúfausse MAJ navigateur‚Äù servi via JS inject√© sur sites l√©gitimes compromis.  Ôøº
	‚Ä¢	Top menace observ√©e encore en 2024, tr√®s active en 2025 avec variations/payloads vari√©s.  Ôøº

‚∏ª

Si tu veux, je te pr√©pare des requ√™tes adapt√©es exactement √† tes index (noms d‚Äôindex Beats/Filebeat/Elastic-Agent, champs r√©els que tu as en 7.x) et un mini-dashboard ‚ÄúFake Update Triage‚Äù (DNS‚ÜíHTTP‚ÜíProcess) pour faire la timeline en 2 clics.